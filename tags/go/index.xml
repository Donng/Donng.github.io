<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Donne blog</title>
    <link>https://donng.github.io/tags/go/</link>
    <description>Recent content in Go on Donne blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 Dec 2019 18:51:46 +0800</lastBuildDate>
    
        <atom:link href="https://donng.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go语言笔记：变量</title>
      <link>https://donng.github.io/2019/12/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E5%8F%98%E9%87%8F/</link>
      <pubDate>Thu, 26 Dec 2019 18:51:46 +0800</pubDate>
      
      <guid>https://donng.github.io/2019/12/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E5%8F%98%E9%87%8F/</guid>
      <description>变量指向一个内存地址，其中存储了某种类型的值。在静态语言中，此内存存储的变量类型不可变。 Go 中的变量如何声明？ Go 变量声明可以指定哪些类型？ Go 中</description>
    </item>
    
    <item>
      <title>Go语言实现动态数组</title>
      <link>https://donng.github.io/2019/10/go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</link>
      <pubDate>Thu, 03 Oct 2019 17:10:27 +0800</pubDate>
      
      <guid>https://donng.github.io/2019/10/go%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84/</guid>
      <description>数组设计之初是在形式上依赖内存分配而成的，所以必须在使用前预先请求空间。这使得数组有以下特性： 请求空间以后大小固定，不能再改变（数据溢出问题</description>
    </item>
    
    <item>
      <title>Go 语言的优劣</title>
      <link>https://donng.github.io/2018/05/go-%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BC%98%E5%8A%A3/</link>
      <pubDate>Sun, 06 May 2018 11:25:19 +0800</pubDate>
      
      <guid>https://donng.github.io/2018/05/go-%E8%AF%AD%E8%A8%80%E7%9A%84%E4%BC%98%E5%8A%A3/</guid>
      <description>文章在 Golang 中文网的地址 点击这里，英语原文地址 点击这里。 这是「Go 是一门设计糟糕的编程语言」系列追加的一篇文章。Go 确实有一些不错的特性，因此这</description>
    </item>
    
  </channel>
</rss>
